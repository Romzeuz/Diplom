version: "3"
services:
  strapi:
    container_name: strapi
    build:
      dockerfile: Dockerfile
      context: .
    restart: unless-stopped
    env_file: .env
    volumes:
      - strapi:/app/project
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    ports:
      - "1337:1337"
    networks:
      - strapi-network
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - "5435:5432"
    networks:
      - strapi-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - strapi-network

  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ${NGINX_CONF}:/etc/nginx/conf.d/default.conf
    networks:
      - strapi-network
    depends_on:
      - frontend
      - strapi

  broker:
    container_name: broker
    image: nats:latest
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    networks:
      - strapi-network

  gateway:
    container_name: gateway
    build:
      context: backend
      dockerfile: gateway.Dockerfile
      args:
        - BASE_IMAGE="python-base"
    ports:
      - "8000:8000"
    networks:
      - strapi-network

  adapter:
    container_name: adapter
    build:
      context: backend
      dockerfile: service.Dockerfile
      args:
        - BASE_IMAGE="python-base"
        - SERVICE_NAME="adapter"
    depends_on:
      - strapi
    networks:
      - strapi-network

volumes:
  strapi-data:
  strapi:

networks:
  strapi-network:
    driver: bridge